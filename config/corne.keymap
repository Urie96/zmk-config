/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro


/ {
  
  behaviors {
		as: auto_shift {
			compatible = "zmk,behavior-hold-tap";
			label = "AUTO_SHIFT";
			#binding-cells = <2>;
			tapping_term_ms = <190>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &lt 3 ESC           AS(Q) AS(W) AS(E) AS(R) AS(T)    AS(Y) AS(U) AS(I) AS(O) AS(P) &kp BSPC
   &mt LSHIFT TAB      AS(A) AS(S) AS(D) AS(F) AS(G)    AS(H) AS(J) AS(K) AS(L) AS(SQT) &mt RSHIFT RET
   &mt LCTRL LC(SPACE) AS(Z) AS(X) AS(C) AS(V) AS(B)    AS(N) AS(M) AS(COMMA) AS(DOT) AS(FSLH) AS(SEMI)
                   &kp RALT &kp LGUI &lt 1 SPACE    &lt 2 SPACE &mo 4  &caps_word
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE  &kp N1   &kp N2  &kp N3   &kp N4   &kp N5      &kp BSLH  &kp MINUS  &kp EQUAL &kp LBKT   &kp RBKT  &kp BSPC
   &kp TILDE  &kp N6   &kp N7  &kp N8   &kp N9   &kp N0      &kp PIPE  &kp UNDER  &kp PLUS  &kp LBRC   &kp RBRC  &trans
   &trans     &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS   &kp KP_MULTIPLY &kp LPAR   &kp RPAR  &trans
                               &trans   &trans   &kp SPACE   &kp SPACE &trans     &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5               &kp HOME &kp PG_DN &kp PG_UP &kp END &trans &trans      
   &trans &kp F6 &kp F7 &kp F8 &kp F9 &kp F10              &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans &kp F11 &kp F12 &trans &trans &trans             &trans   &trans   &trans &trans    &trans &trans
                     &kp LGUI &trans &kp SPACE             &kp RET  &trans   &kp RALT
                        >;
                };

                media_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &trans &trans &trans &trans &trans &trans      &kp C_PP &kp C_PREV &kp C_NEXT &trans &trans &trans
   &trans &trans &trans &trans &trans &trans      &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_UP &kp C_BRI_DN &trans
               &sys_reset &bootloader &trans      &sys_reset &bootloader &trans
                        >;
                };

                micro_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                      &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &kp LG(LS(N4)) &kp LG(LS(N5))      &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans                      &trans &trans &trans &trans &trans &trans
               &sys_reset &bootloader &trans                      &trans &trans &trans
                        >;
                };
        };
};
