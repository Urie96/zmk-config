/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    flavor = "hold-preferred";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <16 19>;// FJ
            bindings = <&caps_word>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <15 16>;
        };

        layer3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };
};

/ {
    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings =
                <&shifted>,
                <&kp>;
        };
        ht: HOLD_TAP {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };
        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 ESC            &as Q  &as W  &as E         &as R               &as T          &as Y        &as U          &as I      &as O    &as P     &as BSLH
&mt LSHIFT TAB       &as A  &as S  &as D         &as F               &as G          &as H        &as J          &as K      &as L    &as SEMI  &as SQT
&mt LCTRL LC(SPACE)  &as Z  &as X  &as C         &as V               &as B          &as N        &as M          &as COMMA  &as DOT  &as FSLH  &mt RSHIFT RET
                                   &mt LALT TAB  &mt LGUI LC(SPACE)  &lt 1 SPACE    &lt 2 ENTER  &mt RCTRL ESC  &kp BSPC
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &as GRAVE  &kp MINUS  &kp EQUAL        &ht LBKT RBKT  &as BSLH  &trans
&trans  &kp N6    &kp N7  &kp N8    &kp N9    &kp N0       &as SQT    &kp UNDER  &kp PLUS         &kp LBRC       &kp RBRC  &trans
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR       &kp RPAR  &trans
                          &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &trans    &kp PAGE_UP  &kp UP    &kp PAGE_DOWN  &trans   &trans
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10    &kp HOME  &kp LEFT     &kp DOWN  &kp RIGHT      &kp END  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &trans    &trans       &trans    &trans         &trans   &trans
                          &trans   &trans   &trans     &trans    &trans       &trans
            >;
        };

        media_layer {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &bt BT_CLR      &kp C_PP    &kp C_PREV    &kp C_NEXT    &none         &none         &none
&none  &none         &none         &none         &none         &none           &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP  &none
                                   &sys_reset    &none         &bootloader     &sys_reset  &none         &bootloader
            >;
        };

        macro_layer {
            bindings = <
&none  &as LG(LC(F1))   &as LG(LC(F2))   &as LG(LC(F3))   &as LG(LC(F4))   &as LG(LC(F5))     &kp LG(LS(N4))  &kp LG(LS(N5))  &as LG(LC(Q))  &none         &none         &none
&none  &as LG(LC(F6))   &as LG(LC(F7))   &as LG(LC(F8))   &as LG(LC(F9))   &as LG(LC(F10))    &kp C_PP        &kp C_PREV      &kp C_NEXT     &none         &none         &none
&none  &as LG(LC(F11))  &as LG(LC(F12))  &as LG(LC(F13))  &as LG(LC(F14))  &as LG(LC(F15))    &kp K_MUTE      &kp C_VOL_DN    &kp C_VOL_UP   &kp C_BRI_DN  &kp C_BRI_UP  &none
                                         &none            &none            &none              &none           &none           &none
            >;
        };
    };
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};
